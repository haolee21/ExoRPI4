#include "MPC.hpp"
Eigen::Matrix<double, 2, 1> MPC::UpdateF(const double *p_h, const double *p_l, const double *u, const std::array<double, MPC_STATE_NUM> &a, const std::array<double, MPC_STATE_NUM> &b)
{
    double x0 = p_h[0] * u[0];
    double x1 = x0 / p_l[0];
    double x2 = p_h[20] * u[20];
    double x3 = x2 / p_l[20];
    double x4 = p_h[21] * u[21];
    double x5 = x4 / p_l[21];
    double x6 = p_h[2] * u[2];
    double x7 = x6 / p_l[2];
    double x8 = p_h[22] * u[22];
    double x9 = x8 / p_l[22];
    double x10 = p_h[23] * u[23];
    double x11 = x10 / p_l[23];
    double x12 = p_h[24] * u[24];
    double x13 = x12 / p_l[24];
    double x14 = p_h[3] * u[3];
    double x15 = x14 / p_l[3];
    double x16 = p_h[4] * u[4];
    double x17 = x16 / p_l[4];
    double x18 = p_h[5] * u[5];
    double x19 = x18 / p_l[5];
    double x20 = p_h[6] * u[6];
    double x21 = x20 / p_l[6];
    double x22 = p_h[7] * u[7];
    double x23 = x22 / p_l[7];
    double x24 = p_h[8] * u[8];
    double x25 = x24 / p_l[8];
    double x26 = p_h[9] * u[9];
    double x27 = x26 / p_l[9];
    double x28 = p_h[10] * u[10];
    double x29 = x28 / p_l[10];
    double x30 = p_h[11] * u[11];
    double x31 = x30 / p_l[11];
    double x32 = p_h[1] * u[1];
    double x33 = x32 / p_l[1];
    double x34 = p_h[12] * u[12];
    double x35 = x34 / p_l[12];
    double x36 = p_h[13] * u[13];
    double x37 = x36 / p_l[13];
    double x38 = p_h[14] * u[14];
    double x39 = x38 / p_l[14];
    double x40 = p_h[15] * u[15];
    double x41 = x40 / p_l[15];
    double x42 = p_h[16] * u[16];
    double x43 = x42 / p_l[16];
    double x44 = p_h[17] * u[17];
    double x45 = x44 / p_l[17];
    double x46 = p_h[18] * u[18];
    double x47 = x46 / p_l[18];
    double x48 = p_h[19] * u[19];
    double x49 = x48 / p_l[19];
    double x50 = 1 - p_l[20] / p_h[20];
    double x51 = x2 * x50;
    double x52 = 1 - p_l[21] / p_h[21];
    double x53 = x4 * x52;
    double x54 = 1 - p_l[22] / p_h[22];
    double x55 = x54 * x8;
    double x56 = 1 - p_l[23] / p_h[23];
    double x57 = x10 * x56;
    double x58 = 1 - p_l[2] / p_h[2];
    double x59 = x58 * x6;
    double x60 = 1 - p_l[24] / p_h[24];
    double x61 = x12 * x60;
    double x62 = 1 - p_l[3] / p_h[3];
    double x63 = x14 * x62;
    double x64 = 1 - p_l[0] / p_h[0];
    double x65 = x0 * x64;
    double x66 = 1 - p_l[4] / p_h[4];
    double x67 = x16 * x66;
    double x68 = 1 - p_l[5] / p_h[5];
    double x69 = x18 * x68;
    double x70 = 1 - p_l[6] / p_h[6];
    double x71 = x20 * x70;
    double x72 = 1 - p_l[7] / p_h[7];
    double x73 = x22 * x72;
    double x74 = 1 - p_l[8] / p_h[8];
    double x75 = x24 * x74;
    double x76 = 1 - p_l[9] / p_h[9];
    double x77 = x26 * x76;
    double x78 = 1 - p_l[10] / p_h[10];
    double x79 = x28 * x78;
    double x80 = 1 - p_l[11] / p_h[11];
    double x81 = x30 * x80;
    double x82 = 1 - p_l[12] / p_h[12];
    double x83 = x34 * x82;
    double x84 = 1 - p_l[13] / p_h[13];
    double x85 = x36 * x84;
    double x86 = 1 - p_l[1] / p_h[1];
    double x87 = x32 * x86;
    double x88 = 1 - p_l[14] / p_h[14];
    double x89 = x38 * x88;
    double x90 = 1 - p_l[15] / p_h[15];
    double x91 = x40 * x90;
    double x92 = 1 - p_l[16] / p_h[16];
    double x93 = x42 * x92;
    double x94 = 1 - p_l[17] / p_h[17];
    double x95 = x44 * x94;
    double x96 = 1 - p_l[18] / p_h[18];
    double x97 = x46 * x96;
    double x98 = 1 - p_l[19] / p_h[19];
    double x99 = x48 * x98;
    double x100 = (p_h[20] * p_h[20]);
    double x101 = -(p_l[20] * p_l[20]) / x100 + 1;
    double x102 = u[20] * x101;
    double x103 = (p_h[21] * p_h[21]);
    double x104 = -(p_l[21] * p_l[21]) / x103 + 1;
    double x105 = u[21] * x104;
    double x106 = (p_h[22] * p_h[22]);
    double x107 = -(p_l[22] * p_l[22]) / x106 + 1;
    double x108 = u[22] * x107;
    double x109 = (p_h[23] * p_h[23]);
    double x110 = -(p_l[23] * p_l[23]) / x109 + 1;
    double x111 = u[23] * x110;
    double x112 = (p_h[24] * p_h[24]);
    double x113 = -(p_l[24] * p_l[24]) / x112 + 1;
    double x114 = u[24] * x113;
    double x115 = (p_h[2] * p_h[2]);
    double x116 = -(p_l[2] * p_l[2]) / x115 + 1;
    double x117 = u[2] * x116;
    double x118 = (p_h[3] * p_h[3]);
    double x119 = -(p_l[3] * p_l[3]) / x118 + 1;
    double x120 = u[3] * x119;
    double x121 = (p_h[4] * p_h[4]);
    double x122 = -(p_l[4] * p_l[4]) / x121 + 1;
    double x123 = u[4] * x122;
    double x124 = (p_h[5] * p_h[5]);
    double x125 = -(p_l[5] * p_l[5]) / x124 + 1;
    double x126 = u[5] * x125;
    double x127 = (p_h[6] * p_h[6]);
    double x128 = -(p_l[6] * p_l[6]) / x127 + 1;
    double x129 = u[6] * x128;
    double x130 = (p_h[7] * p_h[7]);
    double x131 = -(p_l[7] * p_l[7]) / x130 + 1;
    double x132 = u[7] * x131;
    double x133 = (p_h[8] * p_h[8]);
    double x134 = -(p_l[8] * p_l[8]) / x133 + 1;
    double x135 = u[8] * x134;
    double x136 = (p_h[9] * p_h[9]);
    double x137 = -(p_l[9] * p_l[9]) / x136 + 1;
    double x138 = u[9] * x137;
    double x139 = (p_h[0] * p_h[0]);
    double x140 = -(p_l[0] * p_l[0]) / x139 + 1;
    double x141 = u[0] * x140;
    double x142 = (p_h[10] * p_h[10]);
    double x143 = -(p_l[10] * p_l[10]) / x142 + 1;
    double x144 = u[10] * x143;
    double x145 = (p_h[11] * p_h[11]);
    double x146 = -(p_l[11] * p_l[11]) / x145 + 1;
    double x147 = u[11] * x146;
    double x148 = (p_h[12] * p_h[12]);
    double x149 = -(p_l[12] * p_l[12]) / x148 + 1;
    double x150 = u[12] * x149;
    double x151 = (p_h[13] * p_h[13]);
    double x152 = -(p_l[13] * p_l[13]) / x151 + 1;
    double x153 = u[13] * x152;
    double x154 = (p_h[14] * p_h[14]);
    double x155 = -(p_l[14] * p_l[14]) / x154 + 1;
    double x156 = u[14] * x155;
    double x157 = (p_h[15] * p_h[15]);
    double x158 = -(p_l[15] * p_l[15]) / x157 + 1;
    double x159 = u[15] * x158;
    double x160 = (p_h[16] * p_h[16]);
    double x161 = -(p_l[16] * p_l[16]) / x160 + 1;
    double x162 = u[16] * x161;
    double x163 = (p_h[17] * p_h[17]);
    double x164 = -(p_l[17] * p_l[17]) / x163 + 1;
    double x165 = u[17] * x164;
    double x166 = (p_h[18] * p_h[18]);
    double x167 = -(p_l[18] * p_l[18]) / x166 + 1;
    double x168 = u[18] * x167;
    double x169 = (p_h[19] * p_h[19]);
    double x170 = -(p_l[19] * p_l[19]) / x169 + 1;
    double x171 = u[19] * x170;
    double x172 = (p_h[1] * p_h[1]);
    double x173 = -(p_l[1] * p_l[1]) / x172 + 1;
    double x174 = u[1] * x173;
    double x175 = (u[20] * u[20]);
    double x176 = p_h[20] * x101 * x175;
    double x177 = (u[21] * u[21]);
    double x178 = p_h[21] * x104 * x177;
    double x179 = (u[22] * u[22]);
    double x180 = p_h[22] * x107 * x179;
    double x181 = (u[23] * u[23]);
    double x182 = p_h[23] * x110 * x181;
    double x183 = (u[24] * u[24]);
    double x184 = p_h[24] * x113 * x183;
    double x185 = (u[2] * u[2]);
    double x186 = p_h[2] * x116 * x185;
    double x187 = (u[3] * u[3]);
    double x188 = p_h[3] * x119 * x187;
    double x189 = (u[4] * u[4]);
    double x190 = p_h[4] * x122 * x189;
    double x191 = (u[5] * u[5]);
    double x192 = p_h[5] * x125 * x191;
    double x193 = (u[6] * u[6]);
    double x194 = p_h[6] * x128 * x193;
    double x195 = (u[7] * u[7]);
    double x196 = p_h[7] * x131 * x195;
    double x197 = (u[0] * u[0]);
    double x198 = p_h[0] * x140 * x197;
    double x199 = (u[8] * u[8]);
    double x200 = p_h[8] * x134 * x199;
    double x201 = (u[9] * u[9]);
    double x202 = p_h[9] * x137 * x201;
    double x203 = (u[10] * u[10]);
    double x204 = p_h[10] * x143 * x203;
    double x205 = (u[11] * u[11]);
    double x206 = p_h[11] * x146 * x205;
    double x207 = (u[12] * u[12]);
    double x208 = p_h[12] * x149 * x207;
    double x209 = (u[13] * u[13]);
    double x210 = p_h[13] * x152 * x209;
    double x211 = (u[14] * u[14]);
    double x212 = p_h[14] * x155 * x211;
    double x213 = (u[15] * u[15]);
    double x214 = p_h[15] * x158 * x213;
    double x215 = (u[16] * u[16]);
    double x216 = p_h[16] * x161 * x215;
    double x217 = (u[17] * u[17]);
    double x218 = p_h[17] * x164 * x217;
    double x219 = (u[1] * u[1]);
    double x220 = p_h[1] * x173 * x219;
    double x221 = (u[18] * u[18]);
    double x222 = p_h[18] * x167 * x221;
    double x223 = (u[19] * u[19]);
    double x224 = p_h[19] * x170 * x223;
    double x225 = x100 * x175 * (x50 * x50);
    double x226 = x103 * x177 * (x52 * x52);
    double x227 = x106 * x179 * (x54 * x54);
    double x228 = x109 * x181 * (x56 * x56);
    double x229 = x112 * x183 * (x60 * x60);
    double x230 = x115 * x185 * (x58 * x58);
    double x231 = x118 * x187 * (x62 * x62);
    double x232 = x121 * x189 * (x66 * x66);
    double x233 = x124 * x191 * (x68 * x68);
    double x234 = x139 * x197 * (x64 * x64);
    double x235 = x127 * x193 * (x70 * x70);
    double x236 = x130 * x195 * (x72 * x72);
    double x237 = x133 * x199 * (x74 * x74);
    double x238 = x136 * x201 * (x76 * x76);
    double x239 = x142 * x203 * (x78 * x78);
    double x240 = x145 * x205 * (x80 * x80);
    double x241 = x148 * x207 * (x82 * x82);
    double x242 = x151 * x209 * (x84 * x84);
    double x243 = x154 * x211 * (x88 * x88);
    double x244 = x157 * x213 * (x90 * x90);
    double x245 = x172 * x219 * (x86 * x86);
    double x246 = x160 * x215 * (x92 * x92);
    double x247 = x163 * x217 * (x94 * x94);
    double x248 = x166 * x221 * (x96 * x96);
    double x249 = x169 * x223 * (x98 * x98);
    Eigen::Matrix<double, 2, 1> output;
    output << a[0] * x1 + a[100] * x3 + a[101] * x51 + a[102] * x225 + a[103] * x176 + a[104] * x102 + a[105] * x5 + a[106] * x53 + a[107] * x226 + a[108] * x178 + a[109] * x105 + a[10] * x7 + a[110] * x9 + a[111] * x55 + a[112] * x227 + a[113] * x180 + a[114] * x108 + a[115] * x11 + a[116] * x57 + a[117] * x228 + a[118] * x182 + a[119] * x111 + a[11] * x59 + a[120] * x13 + a[121] * x61 + a[122] * x229 + a[123] * x184 + a[124] * x114 + a[12] * x230 + a[13] * x186 + a[14] * x117 + a[15] * x15 + a[16] * x63 + a[17] * x231 + a[18] * x188 + a[19] * x120 + a[1] * x65 + a[20] * x17 + a[21] * x67 + a[22] * x232 + a[23] * x190 + a[24] * x123 + a[25] * x19 + a[26] * x69 + a[27] * x233 + a[28] * x192 + a[29] * x126 + a[2] * x234 + a[30] * x21 + a[31] * x71 + a[32] * x235 + a[33] * x194 + a[34] * x129 + a[35] * x23 + a[36] * x73 + a[37] * x236 + a[38] * x196 + a[39] * x132 + a[3] * x198 + a[40] * x25 + a[41] * x75 + a[42] * x237 + a[43] * x200 + a[44] * x135 + a[45] * x27 + a[46] * x77 + a[47] * x238 + a[48] * x202 + a[49] * x138 + a[4] * x141 + a[50] * x29 + a[51] * x79 + a[52] * x239 + a[53] * x204 + a[54] * x144 + a[55] * x31 + a[56] * x81 + a[57] * x240 + a[58] * x206 + a[59] * x147 + a[5] * x33 + a[60] * x35 + a[61] * x83 + a[62] * x241 + a[63] * x208 + a[64] * x150 + a[65] * x37 + a[66] * x85 + a[67] * x242 + a[68] * x210 + a[69] * x153 + a[6] * x87 + a[70] * x39 + a[71] * x89 + a[72] * x243 + a[73] * x212 + a[74] * x156 + a[75] * x41 + a[76] * x91 + a[77] * x244 + a[78] * x214 + a[79] * x159 + a[7] * x245 + a[80] * x43 + a[81] * x93 + a[82] * x246 + a[83] * x216 + a[84] * x162 + a[85] * x45 + a[86] * x95 + a[87] * x247 + a[88] * x218 + a[89] * x165 + a[8] * x220 + a[90] * x47 + a[91] * x97 + a[92] * x248 + a[93] * x222 + a[94] * x168 + a[95] * x49 + a[96] * x99 + a[97] * x249 + a[98] * x224 + a[99] * x171 + a[9] * x174, b[0] * x1 + b[100] * x3 + b[101] * x51 + b[102] * x225 + b[103] * x176 + b[104] * x102 + b[105] * x5 + b[106] * x53 + b[107] * x226 + b[108] * x178 + b[109] * x105 + b[10] * x7 + b[110] * x9 + b[111] * x55 + b[112] * x227 + b[113] * x180 + b[114] * x108 + b[115] * x11 + b[116] * x57 + b[117] * x228 + b[118] * x182 + b[119] * x111 + b[11] * x59 + b[120] * x13 + b[121] * x61 + b[122] * x229 + b[123] * x184 + b[124] * x114 + b[12] * x230 + b[13] * x186 + b[14] * x117 + b[15] * x15 + b[16] * x63 + b[17] * x231 + b[18] * x188 + b[19] * x120 + b[1] * x65 + b[20] * x17 + b[21] * x67 + b[22] * x232 + b[23] * x190 + b[24] * x123 + b[25] * x19 + b[26] * x69 + b[27] * x233 + b[28] * x192 + b[29] * x126 + b[2] * x234 + b[30] * x21 + b[31] * x71 + b[32] * x235 + b[33] * x194 + b[34] * x129 + b[35] * x23 + b[36] * x73 + b[37] * x236 + b[38] * x196 + b[39] * x132 + b[3] * x198 + b[40] * x25 + b[41] * x75 + b[42] * x237 + b[43] * x200 + b[44] * x135 + b[45] * x27 + b[46] * x77 + b[47] * x238 + b[48] * x202 + b[49] * x138 + b[4] * x141 + b[50] * x29 + b[51] * x79 + b[52] * x239 + b[53] * x204 + b[54] * x144 + b[55] * x31 + b[56] * x81 + b[57] * x240 + b[58] * x206 + b[59] * x147 + b[5] * x33 + b[60] * x35 + b[61] * x83 + b[62] * x241 + b[63] * x208 + b[64] * x150 + b[65] * x37 + b[66] * x85 + b[67] * x242 + b[68] * x210 + b[69] * x153 + b[6] * x87 + b[70] * x39 + b[71] * x89 + b[72] * x243 + b[73] * x212 + b[74] * x156 + b[75] * x41 + b[76] * x91 + b[77] * x244 + b[78] * x214 + b[79] * x159 + b[7] * x245 + b[80] * x43 + b[81] * x93 + b[82] * x246 + b[83] * x216 + b[84] * x162 + b[85] * x45 + b[86] * x95 + b[87] * x247 + b[88] * x218 + b[89] * x165 + b[8] * x220 + b[90] * x47 + b[91] * x97 + b[92] * x248 + b[93] * x222 + b[94] * x168 + b[95] * x49 + b[96] * x99 + b[97] * x249 + b[98] * x224 + b[99] * x171 + b[9] * x174;
    return output;
}
Eigen::Matrix<double, 2, 2> MPC::Update_dF_dxL_T(const double *p_h, const double *p_l, const double *u, const std::array<double, MPC_STATE_NUM> &a, const std::array<double, MPC_STATE_NUM> &b)
{
    double x0 = a[121] * u[24];
    double x1 = (p_l[24] * p_l[24]);
    double x2 = p_h[24] * u[24] / x1;
    double x3 = 2 * u[24];
    double x4 = a[124] * x3;
    double x5 = (p_h[24]);
    double x6 = p_l[24] * x5;
    double x7 = p_l[24] / p_h[24];
    double x8 = (u[24] * u[24]);
    double x9 = 2 * x8;
    double x10 = a[123] * x9;
    double x11 = 1 - x7;
    double x12 = p_h[24] * x9;
    double x13 = a[122] * x12;
    double x14 = u[24] / p_l[24];
    double x15 = x1 / (p_h[24] * p_h[24] * p_h[24]);
    double x16 = x1 * x5;
    double x17 = x8 * (1 - x16);
    double x18 = p_l[24] * x11 * x9;
    double x19 = (x11 * x11);
    double x20 = b[121] * u[24];
    double x21 = b[124] * x3;
    double x22 = b[123] * x9;
    double x23 = b[122] * x12;
    Eigen::Matrix<double, 2, 2> output;
    output << -a[120] * x2 - x0 - x10 * x7 - x11 * x13 - x4 * x6, a[120] * x14 + a[122] * x18 + a[123] * x17 + x0 * x11 + x0 * x7 + x10 * x16 + x13 * x19 + x15 * x4, -b[120] * x2 - x11 * x23 - x20 - x21 * x6 - x22 * x7, b[120] * x14 + b[122] * x18 + b[123] * x17 + x11 * x20 + x15 * x21 + x16 * x22 + x19 * x23 + x20 * x7;
    return output;
}
Eigen::Matrix<double, 2, 2> MPC::Update_dF_dxL1_T(const double *p_h, const double *p_l, const double *u, const std::array<double, MPC_STATE_NUM> &a, const std::array<double, MPC_STATE_NUM> &b)
{
    double x0 = a[116] * u[23];
    double x1 = (p_l[23] * p_l[23]);
    double x2 = p_h[23] * u[23] / x1;
    double x3 = 2 * u[23];
    double x4 = a[119] * x3;
    double x5 = (p_h[23]);
    double x6 = p_l[23] * x5;
    double x7 = p_l[23] / p_h[23];
    double x8 = (u[23] * u[23]);
    double x9 = 2 * x8;
    double x10 = a[118] * x9;
    double x11 = 1 - x7;
    double x12 = p_h[23] * x9;
    double x13 = a[117] * x12;
    double x14 = u[23] / p_l[23];
    double x15 = x1 / (p_h[23] * p_h[23] * p_h[23]);
    double x16 = x1 * x5;
    double x17 = x8 * (1 - x16);
    double x18 = p_l[23] * x11 * x9;
    double x19 = (x11 * x11);
    double x20 = b[116] * u[23];
    double x21 = b[119] * x3;
    double x22 = b[118] * x9;
    double x23 = b[117] * x12;
    Eigen::Matrix<double, 2, 2> output;
    output << -a[115] * x2 - x0 - x10 * x7 - x11 * x13 - x4 * x6, a[115] * x14 + a[117] * x18 + a[118] * x17 + x0 * x11 + x0 * x7 + x10 * x16 + x13 * x19 + x15 * x4, -b[115] * x2 - x11 * x23 - x20 - x21 * x6 - x22 * x7, b[115] * x14 + b[117] * x18 + b[118] * x17 + x11 * x20 + x15 * x21 + x16 * x22 + x19 * x23 + x20 * x7;
    return output;
}
Eigen::Matrix<double, 2, 2> MPC::Update_dF_dxL2_T(const double *p_h, const double *p_l, const double *u, const std::array<double, MPC_STATE_NUM> &a, const std::array<double, MPC_STATE_NUM> &b)
{
    double x0 = a[111] * u[22];
    double x1 = (p_l[22] * p_l[22]);
    double x2 = p_h[22] * u[22] / x1;
    double x3 = 2 * u[22];
    double x4 = a[114] * x3;
    double x5 = (p_h[22]);
    double x6 = p_l[22] * x5;
    double x7 = p_l[22] / p_h[22];
    double x8 = (u[22] * u[22]);
    double x9 = 2 * x8;
    double x10 = a[113] * x9;
    double x11 = 1 - x7;
    double x12 = p_h[22] * x9;
    double x13 = a[112] * x12;
    double x14 = u[22] / p_l[22];
    double x15 = x1 / (p_h[22] * p_h[22] * p_h[22]);
    double x16 = x1 * x5;
    double x17 = x8 * (1 - x16);
    double x18 = p_l[22] * x11 * x9;
    double x19 = (x11 * x11);
    double x20 = b[111] * u[22];
    double x21 = b[114] * x3;
    double x22 = b[113] * x9;
    double x23 = b[112] * x12;
    Eigen::Matrix<double, 2, 2> output;
    output << -a[110] * x2 - x0 - x10 * x7 - x11 * x13 - x4 * x6, a[110] * x14 + a[112] * x18 + a[113] * x17 + x0 * x11 + x0 * x7 + x10 * x16 + x13 * x19 + x15 * x4, -b[110] * x2 - x11 * x23 - x20 - x21 * x6 - x22 * x7, b[110] * x14 + b[112] * x18 + b[113] * x17 + x11 * x20 + x15 * x21 + x16 * x22 + x19 * x23 + x20 * x7;
    return output;
}
Eigen::Matrix<double, 2, 2> MPC::Update_dF_dxL3_T(const double *p_h, const double *p_l, const double *u, const std::array<double, MPC_STATE_NUM> &a, const std::array<double, MPC_STATE_NUM> &b)
{
    double x0 = a[106] * u[21];
    double x1 = (p_l[21] * p_l[21]);
    double x2 = p_h[21] * u[21] / x1;
    double x3 = 2 * u[21];
    double x4 = a[109] * x3;
    double x5 = (p_h[21]);
    double x6 = p_l[21] * x5;
    double x7 = p_l[21] / p_h[21];
    double x8 = (u[21] * u[21]);
    double x9 = 2 * x8;
    double x10 = a[108] * x9;
    double x11 = 1 - x7;
    double x12 = p_h[21] * x9;
    double x13 = a[107] * x12;
    double x14 = u[21] / p_l[21];
    double x15 = x1 / (p_h[21] * p_h[21] * p_h[21]);
    double x16 = x1 * x5;
    double x17 = x8 * (1 - x16);
    double x18 = p_l[21] * x11 * x9;
    double x19 = (x11 * x11);
    double x20 = b[106] * u[21];
    double x21 = b[109] * x3;
    double x22 = b[108] * x9;
    double x23 = b[107] * x12;
    Eigen::Matrix<double, 2, 2> output;
    output << -a[105] * x2 - x0 - x10 * x7 - x11 * x13 - x4 * x6, a[105] * x14 + a[107] * x18 + a[108] * x17 + x0 * x11 + x0 * x7 + x10 * x16 + x13 * x19 + x15 * x4, -b[105] * x2 - x11 * x23 - x20 - x21 * x6 - x22 * x7, b[105] * x14 + b[107] * x18 + b[108] * x17 + x11 * x20 + x15 * x21 + x16 * x22 + x19 * x23 + x20 * x7;
    return output;
}
Eigen::Matrix<double, 2, 2> MPC::Update_dF_dxL4_T(const double *p_h, const double *p_l, const double *u, const std::array<double, MPC_STATE_NUM> &a, const std::array<double, MPC_STATE_NUM> &b)
{
    double x0 = a[101] * u[20];
    double x1 = (p_l[20] * p_l[20]);
    double x2 = p_h[20] * u[20] / x1;
    double x3 = 2 * u[20];
    double x4 = a[104] * x3;
    double x5 = (p_h[20]);
    double x6 = p_l[20] * x5;
    double x7 = p_l[20] / p_h[20];
    double x8 = (u[20] * u[20]);
    double x9 = 2 * x8;
    double x10 = a[103] * x9;
    double x11 = 1 - x7;
    double x12 = p_h[20] * x9;
    double x13 = a[102] * x12;
    double x14 = u[20] / p_l[20];
    double x15 = x1 / (p_h[20] * p_h[20] * p_h[20]);
    double x16 = x1 * x5;
    double x17 = x8 * (1 - x16);
    double x18 = p_l[20] * x11 * x9;
    double x19 = (x11 * x11);
    double x20 = b[101] * u[20];
    double x21 = b[104] * x3;
    double x22 = b[103] * x9;
    double x23 = b[102] * x12;
    Eigen::Matrix<double, 2, 2> output;
    output << -a[100] * x2 - x0 - x10 * x7 - x11 * x13 - x4 * x6, a[100] * x14 + a[102] * x18 + a[103] * x17 + x0 * x11 + x0 * x7 + x10 * x16 + x13 * x19 + x15 * x4, -b[100] * x2 - x11 * x23 - x20 - x21 * x6 - x22 * x7, b[100] * x14 + b[102] * x18 + b[103] * x17 + x11 * x20 + x15 * x21 + x16 * x22 + x19 * x23 + x20 * x7;
    return output;
}
Eigen::Matrix<double, 2, 2> MPC::Update_dF_dxL5_T(const double *p_h, const double *p_l, const double *u, const std::array<double, MPC_STATE_NUM> &a, const std::array<double, MPC_STATE_NUM> &b)
{
    double x0 = a[96] * u[19];
    double x1 = (p_l[19] * p_l[19]);
    double x2 = p_h[19] * u[19] / x1;
    double x3 = 2 * u[19];
    double x4 = a[99] * x3;
    double x5 = (p_h[19]);
    double x6 = p_l[19] * x5;
    double x7 = p_l[19] / p_h[19];
    double x8 = (u[19] * u[19]);
    double x9 = 2 * x8;
    double x10 = a[98] * x9;
    double x11 = 1 - x7;
    double x12 = p_h[19] * x9;
    double x13 = a[97] * x12;
    double x14 = u[19] / p_l[19];
    double x15 = x1 / (p_h[19] * p_h[19] * p_h[19]);
    double x16 = x1 * x5;
    double x17 = x8 * (1 - x16);
    double x18 = p_l[19] * x11 * x9;
    double x19 = (x11 * x11);
    double x20 = b[96] * u[19];
    double x21 = b[99] * x3;
    double x22 = b[98] * x9;
    double x23 = b[97] * x12;
    Eigen::Matrix<double, 2, 2> output;
    output << -a[95] * x2 - x0 - x10 * x7 - x11 * x13 - x4 * x6, a[95] * x14 + a[97] * x18 + a[98] * x17 + x0 * x11 + x0 * x7 + x10 * x16 + x13 * x19 + x15 * x4, -b[95] * x2 - x11 * x23 - x20 - x21 * x6 - x22 * x7, b[95] * x14 + b[97] * x18 + b[98] * x17 + x11 * x20 + x15 * x21 + x16 * x22 + x19 * x23 + x20 * x7;
    return output;
}
Eigen::Matrix<double, 2, 2> MPC::Update_dF_dxL6_T(const double *p_h, const double *p_l, const double *u, const std::array<double, MPC_STATE_NUM> &a, const std::array<double, MPC_STATE_NUM> &b)
{
    double x0 = a[91] * u[18];
    double x1 = (p_l[18] * p_l[18]);
    double x2 = p_h[18] * u[18] / x1;
    double x3 = 2 * u[18];
    double x4 = a[94] * x3;
    double x5 = (p_h[18]);
    double x6 = p_l[18] * x5;
    double x7 = p_l[18] / p_h[18];
    double x8 = (u[18] * u[18]);
    double x9 = 2 * x8;
    double x10 = a[93] * x9;
    double x11 = 1 - x7;
    double x12 = p_h[18] * x9;
    double x13 = a[92] * x12;
    double x14 = u[18] / p_l[18];
    double x15 = x1 / (p_h[18] * p_h[18] * p_h[18]);
    double x16 = x1 * x5;
    double x17 = x8 * (1 - x16);
    double x18 = p_l[18] * x11 * x9;
    double x19 = (x11 * x11);
    double x20 = b[91] * u[18];
    double x21 = b[94] * x3;
    double x22 = b[93] * x9;
    double x23 = b[92] * x12;
    Eigen::Matrix<double, 2, 2> output;
    output << -a[90] * x2 - x0 - x10 * x7 - x11 * x13 - x4 * x6, a[90] * x14 + a[92] * x18 + a[93] * x17 + x0 * x11 + x0 * x7 + x10 * x16 + x13 * x19 + x15 * x4, -b[90] * x2 - x11 * x23 - x20 - x21 * x6 - x22 * x7, b[90] * x14 + b[92] * x18 + b[93] * x17 + x11 * x20 + x15 * x21 + x16 * x22 + x19 * x23 + x20 * x7;
    return output;
}
Eigen::Matrix<double, 2, 2> MPC::Update_dF_dxL7_T(const double *p_h, const double *p_l, const double *u, const std::array<double, MPC_STATE_NUM> &a, const std::array<double, MPC_STATE_NUM> &b)
{
    double x0 = a[86] * u[17];
    double x1 = (p_l[17] * p_l[17]);
    double x2 = p_h[17] * u[17] / x1;
    double x3 = 2 * u[17];
    double x4 = a[89] * x3;
    double x5 = (p_h[17]);
    double x6 = p_l[17] * x5;
    double x7 = p_l[17] / p_h[17];
    double x8 = (u[17] * u[17]);
    double x9 = 2 * x8;
    double x10 = a[88] * x9;
    double x11 = 1 - x7;
    double x12 = p_h[17] * x9;
    double x13 = a[87] * x12;
    double x14 = u[17] / p_l[17];
    double x15 = x1 / (p_h[17] * p_h[17] * p_h[17]);
    double x16 = x1 * x5;
    double x17 = x8 * (1 - x16);
    double x18 = p_l[17] * x11 * x9;
    double x19 = (x11 * x11);
    double x20 = b[86] * u[17];
    double x21 = b[89] * x3;
    double x22 = b[88] * x9;
    double x23 = b[87] * x12;
    Eigen::Matrix<double, 2, 2> output;
    output << -a[85] * x2 - x0 - x10 * x7 - x11 * x13 - x4 * x6, a[85] * x14 + a[87] * x18 + a[88] * x17 + x0 * x11 + x0 * x7 + x10 * x16 + x13 * x19 + x15 * x4, -b[85] * x2 - x11 * x23 - x20 - x21 * x6 - x22 * x7, b[85] * x14 + b[87] * x18 + b[88] * x17 + x11 * x20 + x15 * x21 + x16 * x22 + x19 * x23 + x20 * x7;
    return output;
}
Eigen::Matrix<double, 2, 2> MPC::Update_dF_dxL8_T(const double *p_h, const double *p_l, const double *u, const std::array<double, MPC_STATE_NUM> &a, const std::array<double, MPC_STATE_NUM> &b)
{
    double x0 = a[81] * u[16];
    double x1 = (p_l[16] * p_l[16]);
    double x2 = p_h[16] * u[16] / x1;
    double x3 = 2 * u[16];
    double x4 = a[84] * x3;
    double x5 = (p_h[16]);
    double x6 = p_l[16] * x5;
    double x7 = p_l[16] / p_h[16];
    double x8 = (u[16] * u[16]);
    double x9 = 2 * x8;
    double x10 = a[83] * x9;
    double x11 = 1 - x7;
    double x12 = p_h[16] * x9;
    double x13 = a[82] * x12;
    double x14 = u[16] / p_l[16];
    double x15 = x1 / (p_h[16] * p_h[16] * p_h[16]);
    double x16 = x1 * x5;
    double x17 = x8 * (1 - x16);
    double x18 = p_l[16] * x11 * x9;
    double x19 = (x11 * x11);
    double x20 = b[81] * u[16];
    double x21 = b[84] * x3;
    double x22 = b[83] * x9;
    double x23 = b[82] * x12;
    Eigen::Matrix<double, 2, 2> output;
    output << -a[80] * x2 - x0 - x10 * x7 - x11 * x13 - x4 * x6, a[80] * x14 + a[82] * x18 + a[83] * x17 + x0 * x11 + x0 * x7 + x10 * x16 + x13 * x19 + x15 * x4, -b[80] * x2 - x11 * x23 - x20 - x21 * x6 - x22 * x7, b[80] * x14 + b[82] * x18 + b[83] * x17 + x11 * x20 + x15 * x21 + x16 * x22 + x19 * x23 + x20 * x7;
    return output;
}
Eigen::Matrix<double, 2, 2> MPC::Update_dF_dxH_T(const double *p_h, const double *p_l, const double *u, const std::array<double, MPC_STATE_NUM> &a, const std::array<double, MPC_STATE_NUM> &b)
{
    double x0 = u[24] / p_l[24];
    double x1 = p_l[24] / p_h[24];
    double x2 = a[121] * u[24];
    double x3 = 2 * u[24];
    double x4 = a[124] * x3;
    double x5 = (p_l[24] * p_l[24]);
    double x6 = x5 / (p_h[24] * p_h[24] * p_h[24]);
    double x7 = 1 - x1;
    double x8 = (p_h[24]);
    double x9 = x5 * x8;
    double x10 = (u[24] * u[24]);
    double x11 = 2 * x10;
    double x12 = a[123] * x11;
    double x13 = x10 * (1 - x9);
    double x14 = a[122] * x11;
    double x15 = p_l[24] * x7;
    double x16 = (x7 * x7);
    double x17 = p_h[24] * x14;
    double x18 = p_h[24] * u[24] / x5;
    double x19 = p_l[24] * x8;
    double x20 = b[121] * u[24];
    double x21 = b[124] * x3;
    double x22 = b[123] * x11;
    double x23 = b[122] * x11;
    double x24 = p_h[24] * x23;
    Eigen::Matrix<double, 2, 2> output;
    output << a[120] * x0 + a[123] * x13 + x1 * x2 + x12 * x9 + x14 * x15 + x16 * x17 + x2 * x7 + x4 * x6, -a[120] * x18 - x1 * x12 - x17 * x7 - x19 * x4 - x2, b[120] * x0 + b[123] * x13 + x1 * x20 + x15 * x23 + x16 * x24 + x20 * x7 + x21 * x6 + x22 * x9, -b[120] * x18 - x1 * x22 - x19 * x21 - x20 - x24 * x7;
    return output;
}
Eigen::Matrix<double, 2, 2> MPC::Update_dF_dxH1_T(const double *p_h, const double *p_l, const double *u, const std::array<double, MPC_STATE_NUM> &a, const std::array<double, MPC_STATE_NUM> &b)
{
    double x0 = u[23] / p_l[23];
    double x1 = p_l[23] / p_h[23];
    double x2 = a[116] * u[23];
    double x3 = 2 * u[23];
    double x4 = a[119] * x3;
    double x5 = (p_l[23] * p_l[23]);
    double x6 = x5 / (p_h[23] * p_h[23] * p_h[23]);
    double x7 = 1 - x1;
    double x8 = (p_h[23]);
    double x9 = x5 * x8;
    double x10 = (u[23] * u[23]);
    double x11 = 2 * x10;
    double x12 = a[118] * x11;
    double x13 = x10 * (1 - x9);
    double x14 = a[117] * x11;
    double x15 = p_l[23] * x7;
    double x16 = (x7 * x7);
    double x17 = p_h[23] * x14;
    double x18 = p_h[23] * u[23] / x5;
    double x19 = p_l[23] * x8;
    double x20 = b[116] * u[23];
    double x21 = b[119] * x3;
    double x22 = b[118] * x11;
    double x23 = b[117] * x11;
    double x24 = p_h[23] * x23;
    Eigen::Matrix<double, 2, 2> output;
    output << a[115] * x0 + a[118] * x13 + x1 * x2 + x12 * x9 + x14 * x15 + x16 * x17 + x2 * x7 + x4 * x6, -a[115] * x18 - x1 * x12 - x17 * x7 - x19 * x4 - x2, b[115] * x0 + b[118] * x13 + x1 * x20 + x15 * x23 + x16 * x24 + x20 * x7 + x21 * x6 + x22 * x9, -b[115] * x18 - x1 * x22 - x19 * x21 - x20 - x24 * x7;
    return output;
}
Eigen::Matrix<double, 2, 2> MPC::Update_dF_dxH2_T(const double *p_h, const double *p_l, const double *u, const std::array<double, MPC_STATE_NUM> &a, const std::array<double, MPC_STATE_NUM> &b)
{
    double x0 = u[22] / p_l[22];
    double x1 = p_l[22] / p_h[22];
    double x2 = a[111] * u[22];
    double x3 = 2 * u[22];
    double x4 = a[114] * x3;
    double x5 = (p_l[22] * p_l[22]);
    double x6 = x5 / (p_h[22] * p_h[22] * p_h[22]);
    double x7 = 1 - x1;
    double x8 = (p_h[22]);
    double x9 = x5 * x8;
    double x10 = (u[22] * u[22]);
    double x11 = 2 * x10;
    double x12 = a[113] * x11;
    double x13 = x10 * (1 - x9);
    double x14 = a[112] * x11;
    double x15 = p_l[22] * x7;
    double x16 = (x7 * x7);
    double x17 = p_h[22] * x14;
    double x18 = p_h[22] * u[22] / x5;
    double x19 = p_l[22] * x8;
    double x20 = b[111] * u[22];
    double x21 = b[114] * x3;
    double x22 = b[113] * x11;
    double x23 = b[112] * x11;
    double x24 = p_h[22] * x23;
    Eigen::Matrix<double, 2, 2> output;
    output << a[110] * x0 + a[113] * x13 + x1 * x2 + x12 * x9 + x14 * x15 + x16 * x17 + x2 * x7 + x4 * x6, -a[110] * x18 - x1 * x12 - x17 * x7 - x19 * x4 - x2, b[110] * x0 + b[113] * x13 + x1 * x20 + x15 * x23 + x16 * x24 + x20 * x7 + x21 * x6 + x22 * x9, -b[110] * x18 - x1 * x22 - x19 * x21 - x20 - x24 * x7;
    return output;
}
Eigen::Matrix<double, 2, 2> MPC::Update_dF_dxH3_T(const double *p_h, const double *p_l, const double *u, const std::array<double, MPC_STATE_NUM> &a, const std::array<double, MPC_STATE_NUM> &b)
{
    double x0 = u[21] / p_l[21];
    double x1 = p_l[21] / p_h[21];
    double x2 = a[106] * u[21];
    double x3 = 2 * u[21];
    double x4 = a[109] * x3;
    double x5 = (p_l[21] * p_l[21]);
    double x6 = x5 / (p_h[21] * p_h[21] * p_h[21]);
    double x7 = 1 - x1;
    double x8 = (p_h[21]);
    double x9 = x5 * x8;
    double x10 = (u[21] * u[21]);
    double x11 = 2 * x10;
    double x12 = a[108] * x11;
    double x13 = x10 * (1 - x9);
    double x14 = a[107] * x11;
    double x15 = p_l[21] * x7;
    double x16 = (x7 * x7);
    double x17 = p_h[21] * x14;
    double x18 = p_h[21] * u[21] / x5;
    double x19 = p_l[21] * x8;
    double x20 = b[106] * u[21];
    double x21 = b[109] * x3;
    double x22 = b[108] * x11;
    double x23 = b[107] * x11;
    double x24 = p_h[21] * x23;
    Eigen::Matrix<double, 2, 2> output;
    output << a[105] * x0 + a[108] * x13 + x1 * x2 + x12 * x9 + x14 * x15 + x16 * x17 + x2 * x7 + x4 * x6, -a[105] * x18 - x1 * x12 - x17 * x7 - x19 * x4 - x2, b[105] * x0 + b[108] * x13 + x1 * x20 + x15 * x23 + x16 * x24 + x20 * x7 + x21 * x6 + x22 * x9, -b[105] * x18 - x1 * x22 - x19 * x21 - x20 - x24 * x7;
    return output;
}
Eigen::Matrix<double, 2, 2> MPC::Update_dF_dxH4_T(const double *p_h, const double *p_l, const double *u, const std::array<double, MPC_STATE_NUM> &a, const std::array<double, MPC_STATE_NUM> &b)
{
    double x0 = u[20] / p_l[20];
    double x1 = p_l[20] / p_h[20];
    double x2 = a[101] * u[20];
    double x3 = 2 * u[20];
    double x4 = a[104] * x3;
    double x5 = (p_l[20] * p_l[20]);
    double x6 = x5 / (p_h[20] * p_h[20] * p_h[20]);
    double x7 = 1 - x1;
    double x8 = (p_h[20]);
    double x9 = x5 * x8;
    double x10 = (u[20] * u[20]);
    double x11 = 2 * x10;
    double x12 = a[103] * x11;
    double x13 = x10 * (1 - x9);
    double x14 = a[102] * x11;
    double x15 = p_l[20] * x7;
    double x16 = (x7 * x7);
    double x17 = p_h[20] * x14;
    double x18 = p_h[20] * u[20] / x5;
    double x19 = p_l[20] * x8;
    double x20 = b[101] * u[20];
    double x21 = b[104] * x3;
    double x22 = b[103] * x11;
    double x23 = b[102] * x11;
    double x24 = p_h[20] * x23;
    Eigen::Matrix<double, 2, 2> output;
    output << a[100] * x0 + a[103] * x13 + x1 * x2 + x12 * x9 + x14 * x15 + x16 * x17 + x2 * x7 + x4 * x6, -a[100] * x18 - x1 * x12 - x17 * x7 - x19 * x4 - x2, b[100] * x0 + b[103] * x13 + x1 * x20 + x15 * x23 + x16 * x24 + x20 * x7 + x21 * x6 + x22 * x9, -b[100] * x18 - x1 * x22 - x19 * x21 - x20 - x24 * x7;
    return output;
}
Eigen::Matrix<double, 2, 2> MPC::Update_dF_dxH5_T(const double *p_h, const double *p_l, const double *u, const std::array<double, MPC_STATE_NUM> &a, const std::array<double, MPC_STATE_NUM> &b)
{
    double x0 = u[19] / p_l[19];
    double x1 = p_l[19] / p_h[19];
    double x2 = a[96] * u[19];
    double x3 = 2 * u[19];
    double x4 = a[99] * x3;
    double x5 = (p_l[19] * p_l[19]);
    double x6 = x5 / (p_h[19] * p_h[19] * p_h[19]);
    double x7 = 1 - x1;
    double x8 = (p_h[19]);
    double x9 = x5 * x8;
    double x10 = (u[19] * u[19]);
    double x11 = 2 * x10;
    double x12 = a[98] * x11;
    double x13 = x10 * (1 - x9);
    double x14 = a[97] * x11;
    double x15 = p_l[19] * x7;
    double x16 = (x7 * x7);
    double x17 = p_h[19] * x14;
    double x18 = p_h[19] * u[19] / x5;
    double x19 = p_l[19] * x8;
    double x20 = b[96] * u[19];
    double x21 = b[99] * x3;
    double x22 = b[98] * x11;
    double x23 = b[97] * x11;
    double x24 = p_h[19] * x23;
    Eigen::Matrix<double, 2, 2> output;
    output << a[95] * x0 + a[98] * x13 + x1 * x2 + x12 * x9 + x14 * x15 + x16 * x17 + x2 * x7 + x4 * x6, -a[95] * x18 - x1 * x12 - x17 * x7 - x19 * x4 - x2, b[95] * x0 + b[98] * x13 + x1 * x20 + x15 * x23 + x16 * x24 + x20 * x7 + x21 * x6 + x22 * x9, -b[95] * x18 - x1 * x22 - x19 * x21 - x20 - x24 * x7;
    return output;
}
Eigen::Matrix<double, 2, 2> MPC::Update_dF_dxH6_T(const double *p_h, const double *p_l, const double *u, const std::array<double, MPC_STATE_NUM> &a, const std::array<double, MPC_STATE_NUM> &b)
{
    double x0 = u[18] / p_l[18];
    double x1 = p_l[18] / p_h[18];
    double x2 = a[91] * u[18];
    double x3 = 2 * u[18];
    double x4 = a[94] * x3;
    double x5 = (p_l[18] * p_l[18]);
    double x6 = x5 / (p_h[18] * p_h[18] * p_h[18]);
    double x7 = 1 - x1;
    double x8 = (p_h[18]);
    double x9 = x5 * x8;
    double x10 = (u[18] * u[18]);
    double x11 = 2 * x10;
    double x12 = a[93] * x11;
    double x13 = x10 * (1 - x9);
    double x14 = a[92] * x11;
    double x15 = p_l[18] * x7;
    double x16 = (x7 * x7);
    double x17 = p_h[18] * x14;
    double x18 = p_h[18] * u[18] / x5;
    double x19 = p_l[18] * x8;
    double x20 = b[91] * u[18];
    double x21 = b[94] * x3;
    double x22 = b[93] * x11;
    double x23 = b[92] * x11;
    double x24 = p_h[18] * x23;
    Eigen::Matrix<double, 2, 2> output;
    output << a[90] * x0 + a[93] * x13 + x1 * x2 + x12 * x9 + x14 * x15 + x16 * x17 + x2 * x7 + x4 * x6, -a[90] * x18 - x1 * x12 - x17 * x7 - x19 * x4 - x2, b[90] * x0 + b[93] * x13 + x1 * x20 + x15 * x23 + x16 * x24 + x20 * x7 + x21 * x6 + x22 * x9, -b[90] * x18 - x1 * x22 - x19 * x21 - x20 - x24 * x7;
    return output;
}
Eigen::Matrix<double, 2, 2> MPC::Update_dF_dxH7_T(const double *p_h, const double *p_l, const double *u, const std::array<double, MPC_STATE_NUM> &a, const std::array<double, MPC_STATE_NUM> &b)
{
    double x0 = u[17] / p_l[17];
    double x1 = p_l[17] / p_h[17];
    double x2 = a[86] * u[17];
    double x3 = 2 * u[17];
    double x4 = a[89] * x3;
    double x5 = (p_l[17] * p_l[17]);
    double x6 = x5 / (p_h[17] * p_h[17] * p_h[17]);
    double x7 = 1 - x1;
    double x8 = (p_h[17]);
    double x9 = x5 * x8;
    double x10 = (u[17] * u[17]);
    double x11 = 2 * x10;
    double x12 = a[88] * x11;
    double x13 = x10 * (1 - x9);
    double x14 = a[87] * x11;
    double x15 = p_l[17] * x7;
    double x16 = (x7 * x7);
    double x17 = p_h[17] * x14;
    double x18 = p_h[17] * u[17] / x5;
    double x19 = p_l[17] * x8;
    double x20 = b[86] * u[17];
    double x21 = b[89] * x3;
    double x22 = b[88] * x11;
    double x23 = b[87] * x11;
    double x24 = p_h[17] * x23;
    Eigen::Matrix<double, 2, 2> output;
    output << a[85] * x0 + a[88] * x13 + x1 * x2 + x12 * x9 + x14 * x15 + x16 * x17 + x2 * x7 + x4 * x6, -a[85] * x18 - x1 * x12 - x17 * x7 - x19 * x4 - x2, b[85] * x0 + b[88] * x13 + x1 * x20 + x15 * x23 + x16 * x24 + x20 * x7 + x21 * x6 + x22 * x9, -b[85] * x18 - x1 * x22 - x19 * x21 - x20 - x24 * x7;
    return output;
}
Eigen::Matrix<double, 2, 2> MPC::Update_dF_dxH8_T(const double *p_h, const double *p_l, const double *u, const std::array<double, MPC_STATE_NUM> &a, const std::array<double, MPC_STATE_NUM> &b)
{
    double x0 = u[16] / p_l[16];
    double x1 = p_l[16] / p_h[16];
    double x2 = a[81] * u[16];
    double x3 = 2 * u[16];
    double x4 = a[84] * x3;
    double x5 = (p_l[16] * p_l[16]);
    double x6 = x5 / (p_h[16] * p_h[16] * p_h[16]);
    double x7 = 1 - x1;
    double x8 = (p_h[16]);
    double x9 = x5 * x8;
    double x10 = (u[16] * u[16]);
    double x11 = 2 * x10;
    double x12 = a[83] * x11;
    double x13 = x10 * (1 - x9);
    double x14 = a[82] * x11;
    double x15 = p_l[16] * x7;
    double x16 = (x7 * x7);
    double x17 = p_h[16] * x14;
    double x18 = p_h[16] * u[16] / x5;
    double x19 = p_l[16] * x8;
    double x20 = b[81] * u[16];
    double x21 = b[84] * x3;
    double x22 = b[83] * x11;
    double x23 = b[82] * x11;
    double x24 = p_h[16] * x23;
    Eigen::Matrix<double, 2, 2> output;
    output << a[80] * x0 + a[83] * x13 + x1 * x2 + x12 * x9 + x14 * x15 + x16 * x17 + x2 * x7 + x4 * x6, -a[80] * x18 - x1 * x12 - x17 * x7 - x19 * x4 - x2, b[80] * x0 + b[83] * x13 + x1 * x20 + x15 * x23 + x16 * x24 + x20 * x7 + x21 * x6 + x22 * x9, -b[80] * x18 - x1 * x22 - x19 * x21 - x20 - x24 * x7;
    return output;
}
Eigen::Matrix<double, 2, 1> MPC::Update_dF_du_T(const double *p_h, const double *p_l, const double *u, const std::array<double, MPC_STATE_NUM> &a, const std::array<double, MPC_STATE_NUM> &b)
{
    double x0 = p_h[24] / p_l[24];
    double x1 = 1 - p_l[24] / p_h[24];
    double x2 = p_h[24] * x1;
    double x3 = (p_h[24] * p_h[24]);
    double x4 = -(p_l[24] * p_l[24]) / x3 + 1;
    double x5 = 2 * u[24];
    double x6 = p_h[24] * x4 * x5;
    double x7 = (x1 * x1) * x3 * x5;
    Eigen::Matrix<double, 2, 1> output;
    output << a[120] * x0 + a[121] * x2 + a[122] * x7 + a[123] * x6 + a[124] * x4, b[120] * x0 + b[121] * x2 + b[122] * x7 + b[123] * x6 + b[124] * x4;
    return output;
}
Eigen::Matrix<double, 2, 1> MPC::Update_dF_du1_T(const double *p_h, const double *p_l, const double *u, const std::array<double, MPC_STATE_NUM> &a, const std::array<double, MPC_STATE_NUM> &b)
{
    double x0 = p_h[23] / p_l[23];
    double x1 = 1 - p_l[23] / p_h[23];
    double x2 = p_h[23] * x1;
    double x3 = (p_h[23] * p_h[23]);
    double x4 = -(p_l[23] * p_l[23]) / x3 + 1;
    double x5 = 2 * u[23];
    double x6 = p_h[23] * x4 * x5;
    double x7 = (x1 * x1) * x3 * x5;
    Eigen::Matrix<double, 2, 1> output;
    output << a[115] * x0 + a[116] * x2 + a[117] * x7 + a[118] * x6 + a[119] * x4, b[115] * x0 + b[116] * x2 + b[117] * x7 + b[118] * x6 + b[119] * x4;
    return output;
}
Eigen::Matrix<double, 2, 1> MPC::Update_dF_du2_T(const double *p_h, const double *p_l, const double *u, const std::array<double, MPC_STATE_NUM> &a, const std::array<double, MPC_STATE_NUM> &b)
{
    double x0 = p_h[22] / p_l[22];
    double x1 = 1 - p_l[22] / p_h[22];
    double x2 = p_h[22] * x1;
    double x3 = (p_h[22] * p_h[22]);
    double x4 = -(p_l[22] * p_l[22]) / x3 + 1;
    double x5 = 2 * u[22];
    double x6 = p_h[22] * x4 * x5;
    double x7 = (x1 * x1) * x3 * x5;
    Eigen::Matrix<double, 2, 1> output;
    output << a[110] * x0 + a[111] * x2 + a[112] * x7 + a[113] * x6 + a[114] * x4, b[110] * x0 + b[111] * x2 + b[112] * x7 + b[113] * x6 + b[114] * x4;
    return output;
}
Eigen::Matrix<double, 2, 1> MPC::Update_dF_du3_T(const double *p_h, const double *p_l, const double *u, const std::array<double, MPC_STATE_NUM> &a, const std::array<double, MPC_STATE_NUM> &b)
{
    double x0 = p_h[21] / p_l[21];
    double x1 = 1 - p_l[21] / p_h[21];
    double x2 = p_h[21] * x1;
    double x3 = (p_h[21] * p_h[21]);
    double x4 = -(p_l[21] * p_l[21]) / x3 + 1;
    double x5 = 2 * u[21];
    double x6 = p_h[21] * x4 * x5;
    double x7 = (x1 * x1) * x3 * x5;
    Eigen::Matrix<double, 2, 1> output;
    output << a[105] * x0 + a[106] * x2 + a[107] * x7 + a[108] * x6 + a[109] * x4, b[105] * x0 + b[106] * x2 + b[107] * x7 + b[108] * x6 + b[109] * x4;
    return output;
}
Eigen::Matrix<double, 2, 1> MPC::Update_dF_du4_T(const double *p_h, const double *p_l, const double *u, const std::array<double, MPC_STATE_NUM> &a, const std::array<double, MPC_STATE_NUM> &b)
{
    double x0 = p_h[20] / p_l[20];
    double x1 = 1 - p_l[20] / p_h[20];
    double x2 = p_h[20] * x1;
    double x3 = (p_h[20] * p_h[20]);
    double x4 = -(p_l[20] * p_l[20]) / x3 + 1;
    double x5 = 2 * u[20];
    double x6 = p_h[20] * x4 * x5;
    double x7 = (x1 * x1) * x3 * x5;
    Eigen::Matrix<double, 2, 1> output;
    output << a[100] * x0 + a[101] * x2 + a[102] * x7 + a[103] * x6 + a[104] * x4, b[100] * x0 + b[101] * x2 + b[102] * x7 + b[103] * x6 + b[104] * x4;
    return output;
}
Eigen::Matrix<double, 2, 1> MPC::Update_dF_du5_T(const double *p_h, const double *p_l, const double *u, const std::array<double, MPC_STATE_NUM> &a, const std::array<double, MPC_STATE_NUM> &b)
{
    double x0 = p_h[19] / p_l[19];
    double x1 = 1 - p_l[19] / p_h[19];
    double x2 = p_h[19] * x1;
    double x3 = (p_h[19] * p_h[19]);
    double x4 = -(p_l[19] * p_l[19]) / x3 + 1;
    double x5 = 2 * u[19];
    double x6 = p_h[19] * x4 * x5;
    double x7 = (x1 * x1) * x3 * x5;
    Eigen::Matrix<double, 2, 1> output;
    output << a[95] * x0 + a[96] * x2 + a[97] * x7 + a[98] * x6 + a[99] * x4, b[95] * x0 + b[96] * x2 + b[97] * x7 + b[98] * x6 + b[99] * x4;
    return output;
}
Eigen::Matrix<double, 2, 1> MPC::Update_dF_du6_T(const double *p_h, const double *p_l, const double *u, const std::array<double, MPC_STATE_NUM> &a, const std::array<double, MPC_STATE_NUM> &b)
{
    double x0 = p_h[18] / p_l[18];
    double x1 = 1 - p_l[18] / p_h[18];
    double x2 = p_h[18] * x1;
    double x3 = (p_h[18] * p_h[18]);
    double x4 = -(p_l[18] * p_l[18]) / x3 + 1;
    double x5 = 2 * u[18];
    double x6 = p_h[18] * x4 * x5;
    double x7 = (x1 * x1) * x3 * x5;
    Eigen::Matrix<double, 2, 1> output;
    output << a[90] * x0 + a[91] * x2 + a[92] * x7 + a[93] * x6 + a[94] * x4, b[90] * x0 + b[91] * x2 + b[92] * x7 + b[93] * x6 + b[94] * x4;
    return output;
}
Eigen::Matrix<double, 2, 1> MPC::Update_dF_du7_T(const double *p_h, const double *p_l, const double *u, const std::array<double, MPC_STATE_NUM> &a, const std::array<double, MPC_STATE_NUM> &b)
{
    double x0 = p_h[17] / p_l[17];
    double x1 = 1 - p_l[17] / p_h[17];
    double x2 = p_h[17] * x1;
    double x3 = (p_h[17] * p_h[17]);
    double x4 = -(p_l[17] * p_l[17]) / x3 + 1;
    double x5 = 2 * u[17];
    double x6 = p_h[17] * x4 * x5;
    double x7 = (x1 * x1) * x3 * x5;
    Eigen::Matrix<double, 2, 1> output;
    output << a[85] * x0 + a[86] * x2 + a[87] * x7 + a[88] * x6 + a[89] * x4, b[85] * x0 + b[86] * x2 + b[87] * x7 + b[88] * x6 + b[89] * x4;
    return output;
}
Eigen::Matrix<double, 2, 1> MPC::Update_dF_du8_T(const double *p_h, const double *p_l, const double *u, const std::array<double, MPC_STATE_NUM> &a, const std::array<double, MPC_STATE_NUM> &b)
{
    double x0 = p_h[16] / p_l[16];
    double x1 = 1 - p_l[16] / p_h[16];
    double x2 = p_h[16] * x1;
    double x3 = (p_h[16] * p_h[16]);
    double x4 = -(p_l[16] * p_l[16]) / x3 + 1;
    double x5 = 2 * u[16];
    double x6 = p_h[16] * x4 * x5;
    double x7 = (x1 * x1) * x3 * x5;
    Eigen::Matrix<double, 2, 1> output;
    output << a[80] * x0 + a[81] * x2 + a[82] * x7 + a[83] * x6 + a[84] * x4, b[80] * x0 + b[81] * x2 + b[82] * x7 + b[83] * x6 + b[84] * x4;
    return output;
}
Eigen::Matrix<double, 2, 1> MPC::Update_dF_du9_T(const double *p_h, const double *p_l, const double *u, const std::array<double, MPC_STATE_NUM> &a, const std::array<double, MPC_STATE_NUM> &b)
{
    double x0 = p_h[15] / p_l[15];
    double x1 = 1 - p_l[15] / p_h[15];
    double x2 = p_h[15] * x1;
    double x3 = (p_h[15] * p_h[15]);
    double x4 = -(p_l[15] * p_l[15]) / x3 + 1;
    double x5 = 2 * u[15];
    double x6 = p_h[15] * x4 * x5;
    double x7 = (x1 * x1) * x3 * x5;
    Eigen::Matrix<double, 2, 1> output;
    output << a[75] * x0 + a[76] * x2 + a[77] * x7 + a[78] * x6 + a[79] * x4, b[75] * x0 + b[76] * x2 + b[77] * x7 + b[78] * x6 + b[79] * x4;
    return output;
}
