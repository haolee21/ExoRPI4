#include "MPC.hpp"
Eigen::Matrix<double, 2, 1> MPC::UpdateF(const double *p_h, const double *p_l, const double *u, const std::array<double, MPC_STATE_NUM> &a, const std::array<double, MPC_STATE_NUM> &b)
{
    double x0 = p_h[1] - p_l[1];
    double x1 = p_h[2] - p_l[2];
    double x2 = p_h[3] - p_l[3];
    double x3 = p_h[4] - p_l[4];
    double x4 = p_h[5] - p_l[5];
    double x5 = p_h[6] - p_l[6];
    double x6 = p_h[7] - p_l[7];
    double x7 = p_h[8] - p_l[8];
    double x8 = p_h[9] - p_l[9];
    double x9 = p_h[0] - p_l[0];
    double x10 = p_h[10] - p_l[10];
    double x11 = p_h[11] - p_l[11];
    double x12 = p_h[12] - p_l[12];
    double x13 = p_h[13] - p_l[13];
    double x14 = p_h[14] - p_l[14];
    double x15 = p_h[0] * u[0];
    double x16 = x15 / p_l[0];
    double x17 = p_h[2] * u[2];
    double x18 = x17 / p_l[2];
    double x19 = p_h[3] * u[3];
    double x20 = x19 / p_l[3];
    double x21 = p_h[4] * u[4];
    double x22 = x21 / p_l[4];
    double x23 = p_h[5] * u[5];
    double x24 = x23 / p_l[5];
    double x25 = p_h[6] * u[6];
    double x26 = x25 / p_l[6];
    double x27 = p_h[7] * u[7];
    double x28 = x27 / p_l[7];
    double x29 = p_h[8] * u[8];
    double x30 = x29 / p_l[8];
    double x31 = p_h[9] * u[9];
    double x32 = x31 / p_l[9];
    double x33 = p_h[10] * u[10];
    double x34 = x33 / p_l[10];
    double x35 = p_h[11] * u[11];
    double x36 = x35 / p_l[11];
    double x37 = p_h[1] * u[1];
    double x38 = x37 / p_l[1];
    double x39 = p_h[12] * u[12];
    double x40 = x39 / p_l[12];
    double x41 = p_h[13] * u[13];
    double x42 = x41 / p_l[13];
    double x43 = p_h[14] * u[14];
    double x44 = x43 / p_l[14];
    double x45 = 1 - p_l[2] / p_h[2];
    double x46 = x17 * x45;
    double x47 = 1 - p_l[3] / p_h[3];
    double x48 = x19 * x47;
    double x49 = 1 - p_l[0] / p_h[0];
    double x50 = x15 * x49;
    double x51 = 1 - p_l[4] / p_h[4];
    double x52 = x21 * x51;
    double x53 = 1 - p_l[5] / p_h[5];
    double x54 = x23 * x53;
    double x55 = 1 - p_l[6] / p_h[6];
    double x56 = x25 * x55;
    double x57 = 1 - p_l[7] / p_h[7];
    double x58 = x27 * x57;
    double x59 = 1 - p_l[8] / p_h[8];
    double x60 = x29 * x59;
    double x61 = 1 - p_l[9] / p_h[9];
    double x62 = x31 * x61;
    double x63 = 1 - p_l[10] / p_h[10];
    double x64 = x33 * x63;
    double x65 = 1 - p_l[11] / p_h[11];
    double x66 = x35 * x65;
    double x67 = 1 - p_l[12] / p_h[12];
    double x68 = x39 * x67;
    double x69 = 1 - p_l[13] / p_h[13];
    double x70 = x41 * x69;
    double x71 = 1 - p_l[1] / p_h[1];
    double x72 = x37 * x71;
    double x73 = 1 - p_l[14] / p_h[14];
    double x74 = x43 * x73;
    double x75 = (p_h[1] * p_h[1]);
    double x76 = -(p_l[1] * p_l[1]) / x75 + 1;
    double x77 = u[1] * x76;
    double x78 = (p_h[2] * p_h[2]);
    double x79 = -(p_l[2] * p_l[2]) / x78 + 1;
    double x80 = u[2] * x79;
    double x81 = (p_h[3] * p_h[3]);
    double x82 = -(p_l[3] * p_l[3]) / x81 + 1;
    double x83 = u[3] * x82;
    double x84 = (p_h[4] * p_h[4]);
    double x85 = -(p_l[4] * p_l[4]) / x84 + 1;
    double x86 = u[4] * x85;
    double x87 = (p_h[5] * p_h[5]);
    double x88 = -(p_l[5] * p_l[5]) / x87 + 1;
    double x89 = u[5] * x88;
    double x90 = (p_h[6] * p_h[6]);
    double x91 = -(p_l[6] * p_l[6]) / x90 + 1;
    double x92 = u[6] * x91;
    double x93 = (p_h[7] * p_h[7]);
    double x94 = -(p_l[7] * p_l[7]) / x93 + 1;
    double x95 = u[7] * x94;
    double x96 = (p_h[0] * p_h[0]);
    double x97 = -(p_l[0] * p_l[0]) / x96 + 1;
    double x98 = u[0] * x97;
    double x99 = (p_h[8] * p_h[8]);
    double x100 = -(p_l[8] * p_l[8]) / x99 + 1;
    double x101 = u[8] * x100;
    double x102 = (p_h[9] * p_h[9]);
    double x103 = -(p_l[9] * p_l[9]) / x102 + 1;
    double x104 = u[9] * x103;
    double x105 = (p_h[10] * p_h[10]);
    double x106 = -(p_l[10] * p_l[10]) / x105 + 1;
    double x107 = u[10] * x106;
    double x108 = (p_h[11] * p_h[11]);
    double x109 = -(p_l[11] * p_l[11]) / x108 + 1;
    double x110 = u[11] * x109;
    double x111 = (p_h[12] * p_h[12]);
    double x112 = -(p_l[12] * p_l[12]) / x111 + 1;
    double x113 = u[12] * x112;
    double x114 = (p_h[13] * p_h[13]);
    double x115 = -(p_l[13] * p_l[13]) / x114 + 1;
    double x116 = u[13] * x115;
    double x117 = (p_h[14] * p_h[14]);
    double x118 = -(p_l[14] * p_l[14]) / x117 + 1;
    double x119 = u[14] * x118;
    double x120 = (u[2] * u[2]);
    double x121 = p_h[2] * x120 * x79;
    double x122 = (u[3] * u[3]);
    double x123 = p_h[3] * x122 * x82;
    double x124 = (u[4] * u[4]);
    double x125 = p_h[4] * x124 * x85;
    double x126 = (u[5] * u[5]);
    double x127 = p_h[5] * x126 * x88;
    double x128 = (u[6] * u[6]);
    double x129 = p_h[6] * x128 * x91;
    double x130 = (u[0] * u[0]);
    double x131 = p_h[0] * x130 * x97;
    double x132 = (u[7] * u[7]);
    double x133 = p_h[7] * x132 * x94;
    double x134 = (u[8] * u[8]);
    double x135 = p_h[8] * x100 * x134;
    double x136 = (u[9] * u[9]);
    double x137 = p_h[9] * x103 * x136;
    double x138 = (u[10] * u[10]);
    double x139 = p_h[10] * x106 * x138;
    double x140 = (u[11] * u[11]);
    double x141 = p_h[11] * x109 * x140;
    double x142 = (u[12] * u[12]);
    double x143 = p_h[12] * x112 * x142;
    double x144 = (u[13] * u[13]);
    double x145 = p_h[13] * x115 * x144;
    double x146 = (u[14] * u[14]);
    double x147 = p_h[14] * x118 * x146;
    double x148 = (u[1] * u[1]);
    double x149 = p_h[1] * x148 * x76;
    double x150 = x120 * (x45 * x45) * x78;
    double x151 = x122 * (x47 * x47) * x81;
    double x152 = x124 * (x51 * x51) * x84;
    double x153 = x130 * (x49 * x49) * x96;
    double x154 = x126 * (x53 * x53) * x87;
    double x155 = x128 * (x55 * x55) * x90;
    double x156 = x132 * (x57 * x57) * x93;
    double x157 = x134 * (x59 * x59) * x99;
    double x158 = x102 * x136 * (x61 * x61);
    double x159 = x105 * x138 * (x63 * x63);
    double x160 = x108 * x140 * (x65 * x65);
    double x161 = x111 * x142 * (x67 * x67);
    double x162 = x114 * x144 * (x69 * x69);
    double x163 = x117 * x146 * (x73 * x73);
    double x164 = x148 * (x71 * x71) * x75;
    Eigen::Matrix<double, 2, 1> output;
    output << a[0] * x16 + a[10] * x77 + a[11] * x0 + a[12] * x18 + a[13] * x46 + a[14] * x150 + a[15] * x121 + a[16] * x80 + a[17] * x1 + a[18] * x20 + a[19] * x48 + a[1] * x50 + a[20] * x151 + a[21] * x123 + a[22] * x83 + a[23] * x2 + a[24] * x22 + a[25] * x52 + a[26] * x152 + a[27] * x125 + a[28] * x86 + a[29] * x3 + a[2] * x153 + a[30] * x24 + a[31] * x54 + a[32] * x154 + a[33] * x127 + a[34] * x89 + a[35] * x4 + a[36] * x26 + a[37] * x56 + a[38] * x155 + a[39] * x129 + a[3] * x131 + a[40] * x92 + a[41] * x5 + a[42] * x28 + a[43] * x58 + a[44] * x156 + a[45] * x133 + a[46] * x95 + a[47] * x6 + a[48] * x30 + a[49] * x60 + a[4] * x98 + a[50] * x157 + a[51] * x135 + a[52] * x101 + a[53] * x7 + a[54] * x32 + a[55] * x62 + a[56] * x158 + a[57] * x137 + a[58] * x104 + a[59] * x8 + a[5] * x9 + a[60] * x34 + a[61] * x64 + a[62] * x159 + a[63] * x139 + a[64] * x107 + a[65] * x10 + a[66] * x36 + a[67] * x66 + a[68] * x160 + a[69] * x141 + a[6] * x38 + a[70] * x110 + a[71] * x11 + a[72] * x40 + a[73] * x68 + a[74] * x161 + a[75] * x143 + a[76] * x113 + a[77] * x12 + a[78] * x42 + a[79] * x70 + a[7] * x72 + a[80] * x162 + a[81] * x145 + a[82] * x116 + a[83] * x13 + a[84] * x44 + a[85] * x74 + a[86] * x163 + a[87] * x147 + a[88] * x119 + a[89] * x14 + a[8] * x164 + a[9] * x149, b[0] * x16 + b[10] * x77 + b[11] * x0 + b[12] * x18 + b[13] * x46 + b[14] * x150 + b[15] * x121 + b[16] * x80 + b[17] * x1 + b[18] * x20 + b[19] * x48 + b[1] * x50 + b[20] * x151 + b[21] * x123 + b[22] * x83 + b[23] * x2 + b[24] * x22 + b[25] * x52 + b[26] * x152 + b[27] * x125 + b[28] * x86 + b[29] * x3 + b[2] * x153 + b[30] * x24 + b[31] * x54 + b[32] * x154 + b[33] * x127 + b[34] * x89 + b[35] * x4 + b[36] * x26 + b[37] * x56 + b[38] * x155 + b[39] * x129 + b[3] * x131 + b[40] * x92 + b[41] * x5 + b[42] * x28 + b[43] * x58 + b[44] * x156 + b[45] * x133 + b[46] * x95 + b[47] * x6 + b[48] * x30 + b[49] * x60 + b[4] * x98 + b[50] * x157 + b[51] * x135 + b[52] * x101 + b[53] * x7 + b[54] * x32 + b[55] * x62 + b[56] * x158 + b[57] * x137 + b[58] * x104 + b[59] * x8 + b[5] * x9 + b[60] * x34 + b[61] * x64 + b[62] * x159 + b[63] * x139 + b[64] * x107 + b[65] * x10 + b[66] * x36 + b[67] * x66 + b[68] * x160 + b[69] * x141 + b[6] * x38 + b[70] * x110 + b[71] * x11 + b[72] * x40 + b[73] * x68 + b[74] * x161 + b[75] * x143 + b[76] * x113 + b[77] * x12 + b[78] * x42 + b[79] * x70 + b[7] * x72 + b[80] * x162 + b[81] * x145 + b[82] * x116 + b[83] * x13 + b[84] * x44 + b[85] * x74 + b[86] * x163 + b[87] * x147 + b[88] * x119 + b[89] * x14 + b[8] * x164 + b[9] * x149;
    return output;
}
Eigen::Matrix<double, 2, 2> MPC::Update_dF_dxL_T(const double *p_h, const double *p_l, const double *u, const std::array<double, MPC_STATE_NUM> &a, const std::array<double, MPC_STATE_NUM> &b)
{
    double x0 = a[85] * u[14];
    double x1 = (p_l[14] * p_l[14]);
    double x2 = p_h[14] * u[14] / x1;
    double x3 = 2 * u[14];
    double x4 = a[88] * x3;
    double x5 = (p_h[14]);
    double x6 = p_l[14] * x5;
    double x7 = p_l[14] / p_h[14];
    double x8 = (u[14] * u[14]);
    double x9 = 2 * x8;
    double x10 = a[87] * x9;
    double x11 = 1 - x7;
    double x12 = p_h[14] * x9;
    double x13 = a[86] * x12;
    double x14 = u[14] / p_l[14];
    double x15 = x1 / (p_h[14] * p_h[14] * p_h[14]);
    double x16 = x1 * x5;
    double x17 = x8 * (1 - x16);
    double x18 = p_l[14] * x11 * x9;
    double x19 = (x11 * x11);
    double x20 = b[85] * u[14];
    double x21 = b[88] * x3;
    double x22 = b[87] * x9;
    double x23 = b[86] * x12;
    Eigen::Matrix<double, 2, 2> output;
    output << -a[84] * x2 - a[89] - x0 - x10 * x7 - x11 * x13 - x4 * x6, a[84] * x14 + a[86] * x18 + a[87] * x17 + a[89] + x0 * x11 + x0 * x7 + x10 * x16 + x13 * x19 + x15 * x4, -b[84] * x2 - b[89] - x11 * x23 - x20 - x21 * x6 - x22 * x7, b[84] * x14 + b[86] * x18 + b[87] * x17 + b[89] + x11 * x20 + x15 * x21 + x16 * x22 + x19 * x23 + x20 * x7;
    return output;
}
Eigen::Matrix<double, 2, 2> MPC::Update_dF_dxL1_T(const double *p_h, const double *p_l, const double *u, const std::array<double, MPC_STATE_NUM> &a, const std::array<double, MPC_STATE_NUM> &b)
{
    double x0 = a[79] * u[13];
    double x1 = (p_l[13] * p_l[13]);
    double x2 = p_h[13] * u[13] / x1;
    double x3 = 2 * u[13];
    double x4 = a[82] * x3;
    double x5 = (p_h[13]);
    double x6 = p_l[13] * x5;
    double x7 = p_l[13] / p_h[13];
    double x8 = (u[13] * u[13]);
    double x9 = 2 * x8;
    double x10 = a[81] * x9;
    double x11 = 1 - x7;
    double x12 = p_h[13] * x9;
    double x13 = a[80] * x12;
    double x14 = u[13] / p_l[13];
    double x15 = x1 / (p_h[13] * p_h[13] * p_h[13]);
    double x16 = x1 * x5;
    double x17 = x8 * (1 - x16);
    double x18 = p_l[13] * x11 * x9;
    double x19 = (x11 * x11);
    double x20 = b[79] * u[13];
    double x21 = b[82] * x3;
    double x22 = b[81] * x9;
    double x23 = b[80] * x12;
    Eigen::Matrix<double, 2, 2> output;
    output << -a[78] * x2 - a[83] - x0 - x10 * x7 - x11 * x13 - x4 * x6, a[78] * x14 + a[80] * x18 + a[81] * x17 + a[83] + x0 * x11 + x0 * x7 + x10 * x16 + x13 * x19 + x15 * x4, -b[78] * x2 - b[83] - x11 * x23 - x20 - x21 * x6 - x22 * x7, b[78] * x14 + b[80] * x18 + b[81] * x17 + b[83] + x11 * x20 + x15 * x21 + x16 * x22 + x19 * x23 + x20 * x7;
    return output;
}
Eigen::Matrix<double, 2, 2> MPC::Update_dF_dxL2_T(const double *p_h, const double *p_l, const double *u, const std::array<double, MPC_STATE_NUM> &a, const std::array<double, MPC_STATE_NUM> &b)
{
    double x0 = a[73] * u[12];
    double x1 = (p_l[12] * p_l[12]);
    double x2 = p_h[12] * u[12] / x1;
    double x3 = 2 * u[12];
    double x4 = a[76] * x3;
    double x5 = (p_h[12]);
    double x6 = p_l[12] * x5;
    double x7 = p_l[12] / p_h[12];
    double x8 = (u[12] * u[12]);
    double x9 = 2 * x8;
    double x10 = a[75] * x9;
    double x11 = 1 - x7;
    double x12 = p_h[12] * x9;
    double x13 = a[74] * x12;
    double x14 = u[12] / p_l[12];
    double x15 = x1 / (p_h[12] * p_h[12] * p_h[12]);
    double x16 = x1 * x5;
    double x17 = x8 * (1 - x16);
    double x18 = p_l[12] * x11 * x9;
    double x19 = (x11 * x11);
    double x20 = b[73] * u[12];
    double x21 = b[76] * x3;
    double x22 = b[75] * x9;
    double x23 = b[74] * x12;
    Eigen::Matrix<double, 2, 2> output;
    output << -a[72] * x2 - a[77] - x0 - x10 * x7 - x11 * x13 - x4 * x6, a[72] * x14 + a[74] * x18 + a[75] * x17 + a[77] + x0 * x11 + x0 * x7 + x10 * x16 + x13 * x19 + x15 * x4, -b[72] * x2 - b[77] - x11 * x23 - x20 - x21 * x6 - x22 * x7, b[72] * x14 + b[74] * x18 + b[75] * x17 + b[77] + x11 * x20 + x15 * x21 + x16 * x22 + x19 * x23 + x20 * x7;
    return output;
}
Eigen::Matrix<double, 2, 2> MPC::Update_dF_dxL3_T(const double *p_h, const double *p_l, const double *u, const std::array<double, MPC_STATE_NUM> &a, const std::array<double, MPC_STATE_NUM> &b)
{
    double x0 = a[67] * u[11];
    double x1 = (p_l[11] * p_l[11]);
    double x2 = p_h[11] * u[11] / x1;
    double x3 = 2 * u[11];
    double x4 = a[70] * x3;
    double x5 = (p_h[11]);
    double x6 = p_l[11] * x5;
    double x7 = p_l[11] / p_h[11];
    double x8 = (u[11] * u[11]);
    double x9 = 2 * x8;
    double x10 = a[69] * x9;
    double x11 = 1 - x7;
    double x12 = p_h[11] * x9;
    double x13 = a[68] * x12;
    double x14 = u[11] / p_l[11];
    double x15 = x1 / (p_h[11] * p_h[11] * p_h[11]);
    double x16 = x1 * x5;
    double x17 = x8 * (1 - x16);
    double x18 = p_l[11] * x11 * x9;
    double x19 = (x11 * x11);
    double x20 = b[67] * u[11];
    double x21 = b[70] * x3;
    double x22 = b[69] * x9;
    double x23 = b[68] * x12;
    Eigen::Matrix<double, 2, 2> output;
    output << -a[66] * x2 - a[71] - x0 - x10 * x7 - x11 * x13 - x4 * x6, a[66] * x14 + a[68] * x18 + a[69] * x17 + a[71] + x0 * x11 + x0 * x7 + x10 * x16 + x13 * x19 + x15 * x4, -b[66] * x2 - b[71] - x11 * x23 - x20 - x21 * x6 - x22 * x7, b[66] * x14 + b[68] * x18 + b[69] * x17 + b[71] + x11 * x20 + x15 * x21 + x16 * x22 + x19 * x23 + x20 * x7;
    return output;
}
Eigen::Matrix<double, 2, 2> MPC::Update_dF_dxL4_T(const double *p_h, const double *p_l, const double *u, const std::array<double, MPC_STATE_NUM> &a, const std::array<double, MPC_STATE_NUM> &b)
{
    double x0 = a[61] * u[10];
    double x1 = (p_l[10] * p_l[10]);
    double x2 = p_h[10] * u[10] / x1;
    double x3 = 2 * u[10];
    double x4 = a[64] * x3;
    double x5 = (p_h[10]);
    double x6 = p_l[10] * x5;
    double x7 = p_l[10] / p_h[10];
    double x8 = (u[10] * u[10]);
    double x9 = 2 * x8;
    double x10 = a[63] * x9;
    double x11 = 1 - x7;
    double x12 = p_h[10] * x9;
    double x13 = a[62] * x12;
    double x14 = u[10] / p_l[10];
    double x15 = x1 / (p_h[10] * p_h[10] * p_h[10]);
    double x16 = x1 * x5;
    double x17 = x8 * (1 - x16);
    double x18 = p_l[10] * x11 * x9;
    double x19 = (x11 * x11);
    double x20 = b[61] * u[10];
    double x21 = b[64] * x3;
    double x22 = b[63] * x9;
    double x23 = b[62] * x12;
    Eigen::Matrix<double, 2, 2> output;
    output << -a[60] * x2 - a[65] - x0 - x10 * x7 - x11 * x13 - x4 * x6, a[60] * x14 + a[62] * x18 + a[63] * x17 + a[65] + x0 * x11 + x0 * x7 + x10 * x16 + x13 * x19 + x15 * x4, -b[60] * x2 - b[65] - x11 * x23 - x20 - x21 * x6 - x22 * x7, b[60] * x14 + b[62] * x18 + b[63] * x17 + b[65] + x11 * x20 + x15 * x21 + x16 * x22 + x19 * x23 + x20 * x7;
    return output;
}
Eigen::Matrix<double, 2, 2> MPC::Update_dF_dxH_T(const double *p_h, const double *p_l, const double *u, const std::array<double, MPC_STATE_NUM> &a, const std::array<double, MPC_STATE_NUM> &b)
{
    double x0 = u[14] / p_l[14];
    double x1 = p_l[14] / p_h[14];
    double x2 = a[85] * u[14];
    double x3 = 2 * u[14];
    double x4 = a[88] * x3;
    double x5 = (p_l[14] * p_l[14]);
    double x6 = x5 / (p_h[14] * p_h[14] * p_h[14]);
    double x7 = 1 - x1;
    double x8 = (p_h[14]);
    double x9 = x5 * x8;
    double x10 = (u[14] * u[14]);
    double x11 = 2 * x10;
    double x12 = a[87] * x11;
    double x13 = x10 * (1 - x9);
    double x14 = a[86] * x11;
    double x15 = p_l[14] * x7;
    double x16 = (x7 * x7);
    double x17 = p_h[14] * x14;
    double x18 = p_h[14] * u[14] / x5;
    double x19 = p_l[14] * x8;
    double x20 = b[85] * u[14];
    double x21 = b[88] * x3;
    double x22 = b[87] * x11;
    double x23 = b[86] * x11;
    double x24 = p_h[14] * x23;
    Eigen::Matrix<double, 2, 2> output;
    output << a[84] * x0 + a[87] * x13 + a[89] + x1 * x2 + x12 * x9 + x14 * x15 + x16 * x17 + x2 * x7 + x4 * x6, -a[84] * x18 - a[89] - x1 * x12 - x17 * x7 - x19 * x4 - x2, b[84] * x0 + b[87] * x13 + b[89] + x1 * x20 + x15 * x23 + x16 * x24 + x20 * x7 + x21 * x6 + x22 * x9, -b[84] * x18 - b[89] - x1 * x22 - x19 * x21 - x20 - x24 * x7;
    return output;
}
Eigen::Matrix<double, 2, 2> MPC::Update_dF_dxH1_T(const double *p_h, const double *p_l, const double *u, const std::array<double, MPC_STATE_NUM> &a, const std::array<double, MPC_STATE_NUM> &b)
{
    double x0 = u[13] / p_l[13];
    double x1 = p_l[13] / p_h[13];
    double x2 = a[79] * u[13];
    double x3 = 2 * u[13];
    double x4 = a[82] * x3;
    double x5 = (p_l[13] * p_l[13]);
    double x6 = x5 / (p_h[13] * p_h[13] * p_h[13]);
    double x7 = 1 - x1;
    double x8 = (p_h[13]);
    double x9 = x5 * x8;
    double x10 = (u[13] * u[13]);
    double x11 = 2 * x10;
    double x12 = a[81] * x11;
    double x13 = x10 * (1 - x9);
    double x14 = a[80] * x11;
    double x15 = p_l[13] * x7;
    double x16 = (x7 * x7);
    double x17 = p_h[13] * x14;
    double x18 = p_h[13] * u[13] / x5;
    double x19 = p_l[13] * x8;
    double x20 = b[79] * u[13];
    double x21 = b[82] * x3;
    double x22 = b[81] * x11;
    double x23 = b[80] * x11;
    double x24 = p_h[13] * x23;
    Eigen::Matrix<double, 2, 2> output;
    output << a[78] * x0 + a[81] * x13 + a[83] + x1 * x2 + x12 * x9 + x14 * x15 + x16 * x17 + x2 * x7 + x4 * x6, -a[78] * x18 - a[83] - x1 * x12 - x17 * x7 - x19 * x4 - x2, b[78] * x0 + b[81] * x13 + b[83] + x1 * x20 + x15 * x23 + x16 * x24 + x20 * x7 + x21 * x6 + x22 * x9, -b[78] * x18 - b[83] - x1 * x22 - x19 * x21 - x20 - x24 * x7;
    return output;
}
Eigen::Matrix<double, 2, 2> MPC::Update_dF_dxH2_T(const double *p_h, const double *p_l, const double *u, const std::array<double, MPC_STATE_NUM> &a, const std::array<double, MPC_STATE_NUM> &b)
{
    double x0 = u[12] / p_l[12];
    double x1 = p_l[12] / p_h[12];
    double x2 = a[73] * u[12];
    double x3 = 2 * u[12];
    double x4 = a[76] * x3;
    double x5 = (p_l[12] * p_l[12]);
    double x6 = x5 / (p_h[12] * p_h[12] * p_h[12]);
    double x7 = 1 - x1;
    double x8 = (p_h[12]);
    double x9 = x5 * x8;
    double x10 = (u[12] * u[12]);
    double x11 = 2 * x10;
    double x12 = a[75] * x11;
    double x13 = x10 * (1 - x9);
    double x14 = a[74] * x11;
    double x15 = p_l[12] * x7;
    double x16 = (x7 * x7);
    double x17 = p_h[12] * x14;
    double x18 = p_h[12] * u[12] / x5;
    double x19 = p_l[12] * x8;
    double x20 = b[73] * u[12];
    double x21 = b[76] * x3;
    double x22 = b[75] * x11;
    double x23 = b[74] * x11;
    double x24 = p_h[12] * x23;
    Eigen::Matrix<double, 2, 2> output;
    output << a[72] * x0 + a[75] * x13 + a[77] + x1 * x2 + x12 * x9 + x14 * x15 + x16 * x17 + x2 * x7 + x4 * x6, -a[72] * x18 - a[77] - x1 * x12 - x17 * x7 - x19 * x4 - x2, b[72] * x0 + b[75] * x13 + b[77] + x1 * x20 + x15 * x23 + x16 * x24 + x20 * x7 + x21 * x6 + x22 * x9, -b[72] * x18 - b[77] - x1 * x22 - x19 * x21 - x20 - x24 * x7;
    return output;
}
Eigen::Matrix<double, 2, 2> MPC::Update_dF_dxH3_T(const double *p_h, const double *p_l, const double *u, const std::array<double, MPC_STATE_NUM> &a, const std::array<double, MPC_STATE_NUM> &b)
{
    double x0 = u[11] / p_l[11];
    double x1 = p_l[11] / p_h[11];
    double x2 = a[67] * u[11];
    double x3 = 2 * u[11];
    double x4 = a[70] * x3;
    double x5 = (p_l[11] * p_l[11]);
    double x6 = x5 / (p_h[11] * p_h[11] * p_h[11]);
    double x7 = 1 - x1;
    double x8 = (p_h[11]);
    double x9 = x5 * x8;
    double x10 = (u[11] * u[11]);
    double x11 = 2 * x10;
    double x12 = a[69] * x11;
    double x13 = x10 * (1 - x9);
    double x14 = a[68] * x11;
    double x15 = p_l[11] * x7;
    double x16 = (x7 * x7);
    double x17 = p_h[11] * x14;
    double x18 = p_h[11] * u[11] / x5;
    double x19 = p_l[11] * x8;
    double x20 = b[67] * u[11];
    double x21 = b[70] * x3;
    double x22 = b[69] * x11;
    double x23 = b[68] * x11;
    double x24 = p_h[11] * x23;
    Eigen::Matrix<double, 2, 2> output;
    output << a[66] * x0 + a[69] * x13 + a[71] + x1 * x2 + x12 * x9 + x14 * x15 + x16 * x17 + x2 * x7 + x4 * x6, -a[66] * x18 - a[71] - x1 * x12 - x17 * x7 - x19 * x4 - x2, b[66] * x0 + b[69] * x13 + b[71] + x1 * x20 + x15 * x23 + x16 * x24 + x20 * x7 + x21 * x6 + x22 * x9, -b[66] * x18 - b[71] - x1 * x22 - x19 * x21 - x20 - x24 * x7;
    return output;
}
Eigen::Matrix<double, 2, 2> MPC::Update_dF_dxH4_T(const double *p_h, const double *p_l, const double *u, const std::array<double, MPC_STATE_NUM> &a, const std::array<double, MPC_STATE_NUM> &b)
{
    double x0 = u[10] / p_l[10];
    double x1 = p_l[10] / p_h[10];
    double x2 = a[61] * u[10];
    double x3 = 2 * u[10];
    double x4 = a[64] * x3;
    double x5 = (p_l[10] * p_l[10]);
    double x6 = x5 / (p_h[10] * p_h[10] * p_h[10]);
    double x7 = 1 - x1;
    double x8 = (p_h[10]);
    double x9 = x5 * x8;
    double x10 = (u[10] * u[10]);
    double x11 = 2 * x10;
    double x12 = a[63] * x11;
    double x13 = x10 * (1 - x9);
    double x14 = a[62] * x11;
    double x15 = p_l[10] * x7;
    double x16 = (x7 * x7);
    double x17 = p_h[10] * x14;
    double x18 = p_h[10] * u[10] / x5;
    double x19 = p_l[10] * x8;
    double x20 = b[61] * u[10];
    double x21 = b[64] * x3;
    double x22 = b[63] * x11;
    double x23 = b[62] * x11;
    double x24 = p_h[10] * x23;
    Eigen::Matrix<double, 2, 2> output;
    output << a[60] * x0 + a[63] * x13 + a[65] + x1 * x2 + x12 * x9 + x14 * x15 + x16 * x17 + x2 * x7 + x4 * x6, -a[60] * x18 - a[65] - x1 * x12 - x17 * x7 - x19 * x4 - x2, b[60] * x0 + b[63] * x13 + b[65] + x1 * x20 + x15 * x23 + x16 * x24 + x20 * x7 + x21 * x6 + x22 * x9, -b[60] * x18 - b[65] - x1 * x22 - x19 * x21 - x20 - x24 * x7;
    return output;
}
Eigen::Matrix<double, 2, 1> MPC::Update_dF_du_T(const double *p_h, const double *p_l, const double *u, const std::array<double, MPC_STATE_NUM> &a, const std::array<double, MPC_STATE_NUM> &b)
{
    double x0 = p_h[14] / p_l[14];
    double x1 = 1 - p_l[14] / p_h[14];
    double x2 = p_h[14] * x1;
    double x3 = (p_h[14] * p_h[14]);
    double x4 = -(p_l[14] * p_l[14]) / x3 + 1;
    double x5 = 2 * u[14];
    double x6 = p_h[14] * x4 * x5;
    double x7 = (x1 * x1) * x3 * x5;
    Eigen::Matrix<double, 2, 1> output;
    output << a[84] * x0 + a[85] * x2 + a[86] * x7 + a[87] * x6 + a[88] * x4, b[84] * x0 + b[85] * x2 + b[86] * x7 + b[87] * x6 + b[88] * x4;
    return output;
}
Eigen::Matrix<double, 2, 1> MPC::Update_dF_du1_T(const double *p_h, const double *p_l, const double *u, const std::array<double, MPC_STATE_NUM> &a, const std::array<double, MPC_STATE_NUM> &b)
{
    double x0 = p_h[13] / p_l[13];
    double x1 = 1 - p_l[13] / p_h[13];
    double x2 = p_h[13] * x1;
    double x3 = (p_h[13] * p_h[13]);
    double x4 = -(p_l[13] * p_l[13]) / x3 + 1;
    double x5 = 2 * u[13];
    double x6 = p_h[13] * x4 * x5;
    double x7 = (x1 * x1) * x3 * x5;
    Eigen::Matrix<double, 2, 1> output;
    output << a[78] * x0 + a[79] * x2 + a[80] * x7 + a[81] * x6 + a[82] * x4, b[78] * x0 + b[79] * x2 + b[80] * x7 + b[81] * x6 + b[82] * x4;
    return output;
}
Eigen::Matrix<double, 2, 1> MPC::Update_dF_du2_T(const double *p_h, const double *p_l, const double *u, const std::array<double, MPC_STATE_NUM> &a, const std::array<double, MPC_STATE_NUM> &b)
{
    double x0 = p_h[12] / p_l[12];
    double x1 = 1 - p_l[12] / p_h[12];
    double x2 = p_h[12] * x1;
    double x3 = (p_h[12] * p_h[12]);
    double x4 = -(p_l[12] * p_l[12]) / x3 + 1;
    double x5 = 2 * u[12];
    double x6 = p_h[12] * x4 * x5;
    double x7 = (x1 * x1) * x3 * x5;
    Eigen::Matrix<double, 2, 1> output;
    output << a[72] * x0 + a[73] * x2 + a[74] * x7 + a[75] * x6 + a[76] * x4, b[72] * x0 + b[73] * x2 + b[74] * x7 + b[75] * x6 + b[76] * x4;
    return output;
}
Eigen::Matrix<double, 2, 1> MPC::Update_dF_du3_T(const double *p_h, const double *p_l, const double *u, const std::array<double, MPC_STATE_NUM> &a, const std::array<double, MPC_STATE_NUM> &b)
{
    double x0 = p_h[11] / p_l[11];
    double x1 = 1 - p_l[11] / p_h[11];
    double x2 = p_h[11] * x1;
    double x3 = (p_h[11] * p_h[11]);
    double x4 = -(p_l[11] * p_l[11]) / x3 + 1;
    double x5 = 2 * u[11];
    double x6 = p_h[11] * x4 * x5;
    double x7 = (x1 * x1) * x3 * x5;
    Eigen::Matrix<double, 2, 1> output;
    output << a[66] * x0 + a[67] * x2 + a[68] * x7 + a[69] * x6 + a[70] * x4, b[66] * x0 + b[67] * x2 + b[68] * x7 + b[69] * x6 + b[70] * x4;
    return output;
}
Eigen::Matrix<double, 2, 1> MPC::Update_dF_du4_T(const double *p_h, const double *p_l, const double *u, const std::array<double, MPC_STATE_NUM> &a, const std::array<double, MPC_STATE_NUM> &b)
{
    double x0 = p_h[10] / p_l[10];
    double x1 = 1 - p_l[10] / p_h[10];
    double x2 = p_h[10] * x1;
    double x3 = (p_h[10] * p_h[10]);
    double x4 = -(p_l[10] * p_l[10]) / x3 + 1;
    double x5 = 2 * u[10];
    double x6 = p_h[10] * x4 * x5;
    double x7 = (x1 * x1) * x3 * x5;
    Eigen::Matrix<double, 2, 1> output;
    output << a[60] * x0 + a[61] * x2 + a[62] * x7 + a[63] * x6 + a[64] * x4, b[60] * x0 + b[61] * x2 + b[62] * x7 + b[63] * x6 + b[64] * x4;
    return output;
}
