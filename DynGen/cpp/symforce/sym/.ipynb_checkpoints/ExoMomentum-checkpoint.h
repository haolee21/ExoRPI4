// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: ExoMomentum
 *
 * Args:
 *     q: Matrix61
 *     dq: Matrix61
 *
 * Outputs:
 *     res: Matrix21
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 2, 1> Exomomentum(const Eigen::Matrix<Scalar, 6, 1>& q,
                                        const Eigen::Matrix<Scalar, 6, 1>& dq) {
  // Total ops: 137

  // Input arrays

  // Intermediate terms (33)
  const Scalar _tmp0 = std::sin(q(0, 0));
  const Scalar _tmp1 = Scalar(0.023599999999999999) * dq(0, 0);
  const Scalar _tmp2 = std::cos(q(0, 0));
  const Scalar _tmp3 = Scalar(0.25569999999999998) * dq(0, 0);
  const Scalar _tmp4 = dq(0, 0) + dq(1, 0);
  const Scalar _tmp5 = -_tmp4;
  const Scalar _tmp6 = q(0, 0) + q(1, 0);
  const Scalar _tmp7 = std::sin(_tmp6);
  const Scalar _tmp8 = std::cos(_tmp6);
  const Scalar _tmp9 = _tmp6 + q(2, 0);
  const Scalar _tmp10 = std::sin(_tmp9);
  const Scalar _tmp11 = _tmp4 + dq(2, 0);
  const Scalar _tmp12 = -_tmp11;
  const Scalar _tmp13 = std::cos(_tmp9);
  const Scalar _tmp14 = _tmp9 + q(3, 0);
  const Scalar _tmp15 = std::sin(_tmp14);
  const Scalar _tmp16 = _tmp11 + dq(3, 0);
  const Scalar _tmp17 = -_tmp16;
  const Scalar _tmp18 = std::cos(_tmp14);
  const Scalar _tmp19 = Scalar(0.45050000000000001) * _tmp2 + Scalar(0.438) * _tmp8;
  const Scalar _tmp20 = _tmp14 + q(4, 0);
  const Scalar _tmp21 = std::sin(_tmp20);
  const Scalar _tmp22 = _tmp16 + dq(4, 0);
  const Scalar _tmp23 = -_tmp22;
  const Scalar _tmp24 = std::cos(_tmp20);
  const Scalar _tmp25 = _tmp20 + q(5, 0);
  const Scalar _tmp26 = std::sin(_tmp25);
  const Scalar _tmp27 = _tmp22 + dq(5, 0);
  const Scalar _tmp28 = -_tmp27;
  const Scalar _tmp29 = std::cos(_tmp25);
  const Scalar _tmp30 = Scalar(0.438) * _tmp18 + _tmp19;
  const Scalar _tmp31 = Scalar(0.45050000000000001) * _tmp0 + Scalar(0.438) * _tmp7;
  const Scalar _tmp32 = Scalar(0.438) * _tmp15 + _tmp31;

  // Output terms (1)
  Eigen::Matrix<Scalar, 2, 1> _res;

  _res(0, 0) =
      -_tmp0 * _tmp1 + Scalar(2.9168262140000003) * _tmp10 * _tmp12 +
      Scalar(3.1158398990000005) * _tmp12 * _tmp13 + Scalar(10.205830000000001) * _tmp12 * _tmp19 +
      Scalar(0.0031199999999999999) * _tmp15 * _tmp17 +
      Scalar(0.27287999999999996) * _tmp17 * _tmp18 + Scalar(1.2) * _tmp17 * _tmp19 -
      _tmp2 * _tmp3 + Scalar(0.54059999999999997) * _tmp2 * _tmp5 -
      Scalar(0.039199999999999999) * _tmp21 * _tmp23 + Scalar(0.1968) * _tmp23 * _tmp24 +
      _tmp23 * _tmp30 + Scalar(0.052917909299999996) * _tmp26 * _tmp28 +
      Scalar(0.051928789500000003) * _tmp28 * _tmp29 +
      Scalar(0.82426650000000001) * _tmp28 * (Scalar(0.45050000000000001) * _tmp24 + _tmp30) -
      Scalar(0.0031199999999999999) * _tmp5 * _tmp7 + Scalar(0.25259999999999999) * _tmp5 * _tmp8;
  _res(1, 0) =
      _tmp0 * _tmp3 + Scalar(0.54059999999999997) * _tmp0 * _tmp4 - _tmp1 * _tmp2 +
      Scalar(3.1158398990000005) * _tmp10 * _tmp11 - Scalar(2.9168262140000003) * _tmp11 * _tmp13 +
      Scalar(10.205830000000001) * _tmp11 * _tmp31 + Scalar(0.27287999999999996) * _tmp15 * _tmp16 -
      Scalar(0.0031199999999999999) * _tmp16 * _tmp18 + Scalar(1.2) * _tmp16 * _tmp31 +
      Scalar(0.1968) * _tmp21 * _tmp22 + Scalar(0.039199999999999999) * _tmp22 * _tmp24 +
      _tmp22 * _tmp32 + Scalar(0.051928789500000003) * _tmp26 * _tmp27 -
      Scalar(0.052917909299999996) * _tmp27 * _tmp29 +
      Scalar(0.82426650000000001) * _tmp27 * (Scalar(0.45050000000000001) * _tmp21 + _tmp32) +
      Scalar(0.25259999999999999) * _tmp4 * _tmp7 + Scalar(0.0031199999999999999) * _tmp4 * _tmp8;

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
